type: install
vversion: 1.5.2
name: WordPress Cluster
categories:
  - apps/clusters
  - apps/content-management
description: Get your highly available and scalable clustered solution for WordPress,
  the extremely popular open source CMS and blogging tool. This package is designed
  to ensure the load tracking and distribution, as well as automatic adjusting the
  amount of allocated resources according to it.
logo: https://raw.githubusercontent.com/jelastic-jps/wordpress-cluster/master/images/wp-cluster.png
baseUrl: https://raw.githubusercontent.com/sych74/wordpress-cluster/master

globals:
  DB_USER: jelastic-${fn.random}
  DB_PASS: "${fn.password(20)}"
  ADMIN_PASSWD: "${fn.password(20)}"

settings: 
  fields:
    - type: list
      caption: Topology
      name: topology
      value: single
      values:
        - value: single
          caption: Standalone Wordpress
          tooltip: <h3>Standalone Wordpress</h3>Standalone solution for WordPress. <img width='314' height='280' src='https://github.com/sych74/wordpress-cluster/raw/master/images/single-topology.png?sanitize=true'>
        - value: cluster
          caption: Wordpress Cluster
          tooltip: <h3>Wordpress Cluster</h3>Highly available and scalable clustered solution for WordPress. <img width='314' height='280' src='https://github.com/sych74/wordpress-cluster/raw/master/images/topology.png?sanitize=true'>
      tipParams:
        dismissDelay: 600000
        anchor: l
        hideOnOver: false
        showDelay: 0
       
    - type: displayfield
      height: 20
      
    - type: envname
      name: envName
      caption: Environment
      dependsOn: region
      
    - type: regionlist
      name: region
      caption: Region
      selectFirstAvailable: true
      
onInstall:
  - creatEnv
  - manageEnv
    
actions:
  creatEnv:
    - topologies:
        single: 
          type: install
          name: Single Wordpress Topology
          nodes: 
          - nodeType: nginxphp
            count: 1
            cloudlets: 16
          - nodeType: mysql5
            count: 1
            cloudlets: 8

        cluster: 
          type: install
          name: Wordpress Cluster Topology
          nodes:
          - nodeType: mariadb-dockerized
            tag: 10.3.11
            count: 3
            cloudlets: 8
            nodeGroup: sqldb
            displayName: Database
            env:
              ON_ENV_INSTALL: ''
          - nodeType: nginxphp
            count: 2
            cloudlets: 16
            nodeGroup: cp
            displayName: AppServer
            links: sqldb:DB
            volumes:
              - "/var/www/webroot/ROOT"
              - "/var/ftp/webroot/ROOT"
            volumeMounts:
              "/var/www/webroot/ROOT":
                readOnly: false
                sourcePath: "/data"
                sourceNodeGroup: storage
              "/var/ftp/webroot/ROOT":
                readOnly: false
                sourcePath: "/data"
                sourceNodeGroup: storage
            env:
              PHPFPM_MAX_CHILDREN: 5
          - nodeType: storage
            cloudlets: 8
            nodeGroup: storage
            displayName: Storage
          - nodeType: nginx
            count: 1
            cloudlets: 8
            nodeGroup: bl
            displayName: Load balancer
          
      script: |      
        topologies = toNative(typeof topologies === "string" ? new org.json.JSONObject(String(topologies)) : topologies);                  
        var topology = topologies['${settings.topology}'];
        if (!topology) return { result: 1, error: "unknown topology type"};
        return { result : 0, jps: toJSON(topology) };
        
    - install:
        jps: ${response.jps}
        envName: ${settings.envName}
        region: ${settings.region}
  
  manageEnv:
    install:
      envName: ${settings.envName}
      jps:
        type: update
        name: Wordpress Manager JPS
        
        onInstall:
          - log: Auto Scaling Triggers
          - script: "${baseUrl}/scripts/addTriggers.js"

          - log: Set Node Display Name
          - setNodeDisplayName [bl]: Load balancer
          - setNodeDisplayName [cp]: AppServer

          - log: DB Galera  Setup
          - installJps:
              jps: https://raw.githubusercontent.com/jelastic-jps/mysql-cluster/master/scripts/galera-configuration.jps
              settings:
                path: "https://raw.githubusercontent.com/jelastic-jps/mysql-cluster/master"
                db_user: "${globals.DB_USER}"
                db_pass: "${globals.DB_PASS}"
                custom_conf: "${baseUrl}/configs/mysql/wordpress.cnf"
              nodeGroup: sqldb

          - log: CP Layer Setup
          - forEach(nodes.cp):
            setupNode:
              nodeId: "${@i.id}"

          - log: Download and Unpack latest WordPress release
          - cmd[storage]: wget -qO- 'https://wordpress.org/latest.tar.gz' | tar xz -C /tmp && mv /tmp/wordpress/* /data

          - log: Setup WordPress
          - installJps:
              jps: "${baseUrl}/scripts/setup-wordpress.jps"
              settings:
                db_host: DB
                db_user: "${globals.DB_USER}"
                db_pass: "${globals.DB_PASS}"
                admin_passwd: "${globals.ADMIN_PASSWD}"
                wp_title: "${settings.wp_title}"

          - log: Additional configuration for WordPress.
          - cmd[storage]: |-
              wget ${baseUrl}/configs/wordpress/wp-jelastic.php -O /data/wp-jelastic.php
              sed -i "s/.*'wp-settings.php';.*/require_once ABSPATH . 'wp-jelastic.php';\n&/" /data/wp-config.php

          - log: Plugins install
          - installJps:
              jps: "${baseUrl}/scripts/setup-plugins.jps"
              settings:
                server_webroot: /var/www/webroot/ROOT

          - log: Set permission
          - cmd[storage]: chown 700:700 -Rh /data/

        actions:
          setupNode:
            cmd[${this.nodeId}]: |-
              wget ${baseUrl}/configs/nginx/nginx.conf -O /etc/nginx/nginx.conf
              wget ${baseUrl}/configs/nginx/default.conf -O /etc/nginx/conf.d/default.conf
              wget ${baseUrl}/configs/php/wp-upload.ini -O /etc/php.d/wp-upload.ini
              wget ${baseUrl}/configs/php/opcache.ini -O /etc/php.d/opcache.ini
              wget ${baseUrl}/configs/php/extensions.ini -O /etc/php.d/extensions.ini
              sudo service nginx restart
              
